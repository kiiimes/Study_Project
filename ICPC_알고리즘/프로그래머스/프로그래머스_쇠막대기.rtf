{\rtf1\ansi\ansicpg949\cocoartf1671\cocoasubrtf500
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #include <iostream>\
#include <vector>\
#include <stack>\
#include <stdio.h>\
#include <string>\
\
using namespace std;\
\
int solution(string arrangement) \{\
   int answer = 0;\
   int cnt = 0;\
   stack<int> s;\
\
   for (int i = 0; i<arrangement.length(); i++) \{\
      if (arrangement[i] == '(') \{\
         cnt += 1;\
         s.push(arrangement[i]);\
         if (arrangement[i + 1] == ')') \{\
            cnt -= 1;\
            s.pop();\
            for (int j = 0; j<s.size(); j++) \{\
               cnt += 1;\
            \}\
            i += 1;\
         \}\
      \}\
      else if (arrangement[i] == ')') \{\
         s.pop();\
      \}\
   \}\
   answer = cnt;\
\
   return answer;\
\}}